{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled46.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNWVCnXXgLqHnO6p3VIGOyX",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/pocemuchka/test_repo/blob/main/%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D1%8B\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "vhGe060NY8Jv"
      },
      "outputs": [],
      "source": [
        "mkdir sample_repo"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cd sample_repo"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AON1nbapY-EY",
        "outputId": "8a555f0b-7acb-4d7b-b8bd-73fe36444cff"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/sample_repo\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#инициализация \n",
        "!git init"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Tg1p_v0UZrL3",
        "outputId": "8ca0269e-7bdf-40d6-e657-3e021599728e"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Initialized empty Git repository in /content/sample_repo/.git/\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#смотрим что связано с git\n",
        "ls .git"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aKH5DhbXbBem",
        "outputId": "ac179acb-5300-48ea-fcf2-17a414ccad35"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[0m\u001b[01;34mbranches\u001b[0m/  config  description  HEAD  \u001b[01;34mhooks\u001b[0m/  \u001b[01;34minfo\u001b[0m/  \u001b[01;34mobjects\u001b[0m/  \u001b[01;34mrefs\u001b[0m/\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!touch README.md"
      ],
      "metadata": {
        "id": "eck5mjrdbWWO"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cat README.md"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PL3lRcLEb1HO",
        "outputId": "d0e4989b-9375-43d7-c38d-8dd0a02b010b"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WELCOME!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!echo WELCOME! >> README.md"
      ],
      "metadata": {
        "id": "F2L_pmx0bel1"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!git status"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CqwUsGJdcGZm",
        "outputId": "119fcbbc-b20d-4bd3-af5b-bfb1530f983e"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "On branch master\n",
            "\n",
            "No commits yet\n",
            "\n",
            "Changes to be committed:\n",
            "  (use \"git rm --cached <file>...\" to unstage)\n",
            "\n",
            "\t\u001b[32mnew file:   README.md\u001b[m\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rm - rf md README"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nqoqaQkBcqu-",
        "outputId": "0b8436f1-57d6-4782-d4bc-2335cb103964"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "rm: cannot remove '-': No such file or directory\n",
            "rm: cannot remove 'rf': No such file or directory\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ls"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3HYK8thccu6C",
        "outputId": "3378b968-ff83-4605-dcdd-f2f8cef91414"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "README.md\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git add README.md"
      ],
      "metadata": {
        "id": "JWsXZUp_dQrJ"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!git config --global user.email \"ksynia@ya.ru\"\n",
        "!git config --global user.name \"Kseniia K\""
      ],
      "metadata": {
        "id": "iEMhsa7neaKt"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!git commit -m \"Initial commit\""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Fja3clgIeIx9",
        "outputId": "71d69f0c-ad59-487e-cbad-e4388a8be86a"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[main 358da37] Initial commit\n",
            " 1 file changed, 0 insertions(+), 0 deletions(-)\n",
            " rename README.md => README.mk (100%)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git branch -M main"
      ],
      "metadata": {
        "id": "kVGLuczthiaA"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!git status"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_c8nuVeXhy-Q",
        "outputId": "b322b523-1250-48d5-fd17-3d9ed6004995"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "On branch main\n",
            "nothing to commit, working tree clean\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git remote add origin-token https://pocemuchka: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@github.com/pocemuchka/test_repo.git"
      ],
      "metadata": {
        "id": "aK6Ss_dnh0PK"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!git push -u origin-token main"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VBMIrmnJiCen",
        "outputId": "cbd9700f-1a1b-4a7e-f421-679adaff872d"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Counting objects: 3, done.\n",
            "Writing objects:  33% (1/3)   \rWriting objects:  66% (2/3)   \rWriting objects: 100% (3/3)   \rWriting objects: 100% (3/3), 218 bytes | 218.00 KiB/s, done.\n",
            "Total 3 (delta 0), reused 0 (delta 0)\n",
            "To https://github.com/pocemuchka/test_repo.git\n",
            " * [new branch]      main -> main\n",
            "Branch 'main' set up to track remote branch 'main' from 'origin-token'.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pwd"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "XstkBko0lrdE",
        "outputId": "30e1ec36-305b-4885-8940-afd18fecfdec"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'/content/sample_repo'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!mv README.mk README.md"
      ],
      "metadata": {
        "id": "k6M2xA_plrou"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!git status"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xm3wFXv5mPZI",
        "outputId": "2ef9b2f3-8228-4dc4-ce77-d2e4badd76ef"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "On branch main\n",
            "Your branch is up to date with 'origin-token/main'.\n",
            "\n",
            "Changes to be committed:\n",
            "  (use \"git reset HEAD <file>...\" to unstage)\n",
            "\n",
            "\t\u001b[32mrenamed:    README.md -> README.mk\u001b[m\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git mv README.md README.mk"
      ],
      "metadata": {
        "id": "p8rqa5wDmeIc"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!git commit -m"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e1irq-k2nO-V",
        "outputId": "c37204db-61af-4bfb-cda6-82b98b533c6a"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "error: switch `m' requires a value\n",
            "usage: git commit [<options>] [--] <pathspec>...\n",
            "\n",
            "    -q, --quiet           suppress summary after successful commit\n",
            "    -v, --verbose         show diff in commit message template\n",
            "\n",
            "Commit message options\n",
            "    -F, --file <file>     read message from file\n",
            "    --author <author>     override author for commit\n",
            "    --date <date>         override date for commit\n",
            "    -m, --message <message>\n",
            "                          commit message\n",
            "    -c, --reedit-message <commit>\n",
            "                          reuse and edit message from specified commit\n",
            "    -C, --reuse-message <commit>\n",
            "                          reuse message from specified commit\n",
            "    --fixup <commit>      use autosquash formatted message to fixup specified commit\n",
            "    --squash <commit>     use autosquash formatted message to squash specified commit\n",
            "    --reset-author        the commit is authored by me now (used with -C/-c/--amend)\n",
            "    -s, --signoff         add Signed-off-by:\n",
            "    -t, --template <file>\n",
            "                          use specified template file\n",
            "    -e, --edit            force edit of commit\n",
            "    --cleanup <default>   how to strip spaces and #comments from message\n",
            "    --status              include status in commit message template\n",
            "    -S, --gpg-sign[=<key-id>]\n",
            "                          GPG sign commit\n",
            "\n",
            "Commit contents options\n",
            "    -a, --all             commit all changed files\n",
            "    -i, --include         add specified files to index for commit\n",
            "    --interactive         interactively add files\n",
            "    -p, --patch           interactively add changes\n",
            "    -o, --only            commit only specified files\n",
            "    -n, --no-verify       bypass pre-commit and commit-msg hooks\n",
            "    --dry-run             show what would be committed\n",
            "    --short               show status concisely\n",
            "    --branch              show branch information\n",
            "    --ahead-behind        compute full ahead/behind values\n",
            "    --porcelain           machine-readable output\n",
            "    --long                show status in long format (default)\n",
            "    -z, --null            terminate entries with NUL\n",
            "    --amend               amend previous commit\n",
            "    --no-post-rewrite     bypass post-rewrite hook\n",
            "    -u, --untracked-files[=<mode>]\n",
            "                          show untracked files, optional modes: all, normal, no. (Default: all)\n",
            "\n"
          ]
        }
      ]
    }
  ]
}